@model ViewChatRoomAppViewModel
<div>
    @*<a href="@Url.Action("")" class="btn btn-outline-danger">*@
        <span class="fas fa-cancel pe-2">logout</span>

        <form asp-controller="chatroom" asp-action="logout" method="post" >
            <button class="btn btn-primary" type="submit">Logout</button>
            <div class="input-group mt-3">
                <input type="hidden" asp-for="Id" class="form-control" value="@Model.Id" />
                <input type="hidden" asp-for="isLoggedIn" class="form-control" value="@Model.isLoggedIn" />
            </div>
      </form>

    @*</a>*@

     
</div>
<div class="card">
    <div class="card-header">
        <div class="row">
            <div class="col @Model.ColorCssClasses">
                <div class="fs-1">
                    @Model.UserName
                </div>
            </div>
            <div class="col-1 d-flex align-items-center" style="width: 106px;">
                <a class="btn btn-outline-primary" href="@Url.Action("index", "View", new { id = Model.Id })">
                    <span class="fas fa-pencil"></span>
                </a>
                
            </div>
        </div>
    </div>
    @*<ul class="list-group list-group-flush">
        foreach (var task in Model.Tasks)
        {
            <li class="list-group-item">
                <div class="row @(task.IsComplete ? "text-decoration-line-through" : "")">
                    <div class="col-1 px-3 text-danger d-flex align-items-center" style="width: 44px;">
                        @for (var i = 0; i < task.Priority; i++)
                        {
                            <span class="fas fa-exclamation"></span>
                        }
                    </div>
                    <div class="col">
                        @task.Description
                    </div>
                    <div class="col-1 d-flex align-items-center" style="width: 106px">
                        <button class="btn btn-outline-success" type="button" data-action="toggleDone" data-task-id="@task.Id" data-todolist-id="@Model.Id">
                            <span class="fas fa-check"></span>
                        </button>
                        <button class="btn btn-outline-danger" type="button" data-action="deleteTask" data-task-id="@task.Id" data-sendmessage-id="@Model.Id">
                            <span class="fas fa-trash-can"></span>
                        </button>
                    </div>
                </div>
            </li>
        }
  </ul>*@
    <form asp-controller="chatroom" asp-action="sendmessage" method="post">
        <div class="input-group mt-3">
            <input type="hidden" asp-for="Id" class="form-control" value="@Model.Id" />
            <input type="hidden" asp-for="UserColor" class="form-control" value="@Model.UserColor" />
            <input type="hidden" asp-for="UserName" class="form-control" value="@Model.UserName" />
            <input type="text" asp-for="Message" class="form-control" placeholder="write your message here" aria-label="Send Message" aria-describedby="button-send-message">
            <button class="btn btn-primary" type="submit">Send</button>
        </div>
    </form>
</div>

</div>
     @foreach (var user in Model.Users)
    {
        <a href="@Url.Action("View", "user", new { id = user.Id})">
            <div class="card row p-4 mb-3 @user.ColorCssClasses">
                <div class="container row">
                    <div class="col-9">
                        <div class="fs-1">@user.Name</div>
                    </div>
                    
                </div>
            </div>
        </a>
    }
</div>

@*section Scripts {
<script>
    $(function() {
        var deleteSelector = '[data-action="deleteTask"]';
        var doneSelector = '[data-action="toggleDone"]';
        var addTaskSelector = "#button-add-task";

        $(deleteSelector).click(function() {
            var that = $(this);
            $.ajax('/api/todolist/task/delete?todolistid=' + that.data('todolist-id') + '&taskid=' + that.data('task-id'),
            {
                method: 'POST',
                success: function(jqXHR, textStatus) {
                    location.reload();
                },
                error: function(jqXHR, textStatus, errorThrown) {
                    alert(textStatus);
                }
            });
        });

        $(doneSelector).click(function() {
            var that = $(this);
            $.ajax('/api/todolist/task/complete?todolistid=' + that.data('todolist-id') + '&taskid=' + that.data('task-id'),
            {
                method: 'POST',
                success: function(jqXHR, textStatus) {
                    location.reload();
                },
                error: function(jqXHR, textStatus, errorThrown) {
                    alert(textStatus);
                }
            });
        });

        $(addTaskSelector).click(function() {
            var that = $(this);
            var input = that.siblings("input");
            var select = that.siblings("select");
            
            if(input.val() != '')
            {
                $.ajax('/api/todolist/task?todolistid=' + that.data('todolist-id'),
                {
                    contentType: 'application/json',
                    method: 'POST',
                    data: JSON.stringify({ task: input.val(), priority: select.val() }),
                    success: function(jqXHR, textStatus) {
                        location.reload();
                    },
                    error: function(jqXHR, textStatus, errorThrown) {
                        alert(textStatus);
                    }
                });
            }
        });
    });
</script>
}*@